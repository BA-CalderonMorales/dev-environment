name: 'Version Determiner'
description: 'Determines the next version number with prefix support'

inputs:
  source_branch:
    description: 'Source branch for versioning (beta or main)'
    required: true
    default: 'beta'
  initial_version:
    description: 'Initial version to use if no tags exist'
    required: false
    default: 'beta-v0.0.1'

outputs:
  new_version:
    description: 'The next version number'
    value: ${{ steps.version_script.outputs.version }}
  is_beta:
    description: 'Whether this is a beta version'
    value: ${{ steps.version_script.outputs.is_beta }}

runs:
  using: 'composite'
  steps:
    # Show diagnostic information about the branch
    - name: Display branch information
      shell: bash
      run: |
        echo "Source branch: ${{ inputs.source_branch }}"
        echo "Current ref: ${{ github.ref }}"
        echo "Repository: ${{ github.repository }}"
        
    # Ensure Rust scripts are compiled
    - name: Compile Rust scripts
      shell: bash
      run: |
        if [ ! -f "${{ github.workspace }}/.github/scripts/target/debug/step_version_determiner" ]; then
          echo "Compiling Rust scripts..."
          cd "${{ github.workspace }}/.github/scripts"
          cargo build
        fi

    # Run the version determiner script
    - name: Determine version
      id: version_script
      shell: bash
      run: ${{ github.workspace }}/.github/scripts/target/debug/step_version_determiner
      env:
        INPUT_SOURCE_BRANCH: ${{ inputs.source_branch }}
        INPUT_INITIAL_VERSION: ${{ inputs.initial_version }}
        RUST_LOG: debug  # Set logging level
