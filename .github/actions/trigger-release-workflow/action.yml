name: 'Trigger Release Workflow'
description: 'Triggers the release workflow when a PR is merged to beta or main'

inputs:
  github_token:
    description: 'GitHub token for authentication'
    required: true
  ref:
    description: 'The git reference to use (branch)'
    required: true
  sha:
    description: 'The commit SHA to reference in the release'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Determine branch name
      id: get-branch
      shell: bash
      run: |
        # Extract branch name from ref
        REF="${{ inputs.ref }}"
        BRANCH_NAME=${REF#refs/heads/}
        echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
        echo "Branch name extracted: $BRANCH_NAME"

    - name: Trigger release workflow
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          // Only trigger for beta or main branches
          const branch = "${{ steps.get-branch.outputs.branch }}";
          if (!['beta', 'main'].includes(branch)) {
            console.log(`Branch ${branch} is not eligible for release workflow trigger`);
            return;
          }
          
          console.log(`Triggering release workflow for branch ${branch} with SHA ${process.env.SHA}`);
          
          try {
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'workflow_create_release.yml',
              ref: branch,
              inputs: {
                // Match exactly the input parameters expected by workflow_create_release.yml
                trigger_sha: process.env.SHA,
                source_branch: branch,
                force_process: "false"
              }
            });
            console.log(`Release workflow triggered successfully: ${JSON.stringify(response)}`);
          } catch (error) {
            console.error(`Failed to trigger release workflow: ${error.message}`);
            console.error(`Error details: ${JSON.stringify(error, Object.getOwnPropertyNames(error))}`);
            throw error;
          }
      env:
        SHA: ${{ inputs.sha }}
