name: 'DockerHub Build'
description: 'Builds and pushes Docker images to registry with version awareness'

inputs:
  environment:
    description: 'Target environment (dev/beta/prod)'
    required: true
  base_image:
    description: 'Base image tag to use'
    required: true
  version:
    description: 'Version to tag image with'
    required: true

outputs:
  image_changed:
    description: 'Whether the image was changed'
    value: ${{ steps.build.outputs.image_changed }}

runs:
  using: 'composite'
  steps:
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ba-calderonmorales/dev-environment
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}},value=${{ inputs.version }}
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
          type=raw,value=beta,enable=${{ github.ref == 'refs/heads/beta' }}
          type=raw,value=pipeline,enable=${{ github.ref == 'refs/heads/main' }}
          type=raw,value=dev,enable=${{ github.ref == 'refs/heads/beta' }}

    - name: Generate Dockerfiles
      shell: bash
      run: |
        chmod +x ./scripts/generate-dockerfile.sh
        ./scripts/generate-dockerfile.sh pipeline ${{ inputs.version }}
        ./scripts/generate-dockerfile.sh dev ${{ inputs.version }}
        ./scripts/generate-dockerfile.sh beta ${{ inputs.version }}
        ./scripts/generate-dockerfile.sh latest ${{ inputs.version }}

    - name: Build and push
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
