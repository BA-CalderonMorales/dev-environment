name: 'Queue Release'
description: 'Add a commit to the release queue for processing'

inputs:
  github_token:
    description: 'GitHub token for authentication'
    required: true
  sha:
    description: 'SHA of commit to queue'
    required: true
  branch:
    description: 'Branch name (beta/main)'
    required: true
  bot_gpg_private_key:
    description: 'GPG key for signing'
    required: false
  bot_gpg_passphrase:
    description: 'GPG passphrase'
    required: false
  bot_email:
    description: 'Bot email'
    required: false

outputs:
  queue_position:
    description: 'Position in release queue'
    value: ${{ steps.queue.outputs.queue_position }}
  estimated_time:
    description: 'Estimated time to release'
    value: ${{ steps.queue.outputs.estimated_time }}

runs:
  using: 'composite'
  steps:
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build workflow scripts
      shell: bash
      run: |
        cd .github/scripts
        cargo build --release

    # Debug inputs to diagnose any issues
    - name: Debug Inputs
      shell: bash
      run: cargo run --bin step_debug_inputs  # Use snake_case name as in Cargo.toml
      env:
        INPUT_SHA: ${{ inputs.sha }}
        INPUT_BRANCH: ${{ inputs.branch }}
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}

    # The main queue logic
    - name: Add to Release Queue
      id: queue
      shell: bash
      run: |
        cd ${{ github.workspace }}/.github/scripts
        cargo run --bin step_queue_release  # Use snake_case name as in Cargo.toml
      env:
        INPUT_SHA: ${{ inputs.sha }}
        INPUT_BRANCH: ${{ inputs.branch }}
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_BOT_GPG_PRIVATE_KEY: ${{ inputs.bot_gpg_private_key }}
        INPUT_BOT_GPG_PASSPHRASE: ${{ inputs.bot_gpg_passphrase }}
        INPUT_BOT_EMAIL: ${{ inputs.bot_email }}
